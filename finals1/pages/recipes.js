import Image from "next/image";
import fs from 'fs';
import path from "path";
import Head from "next/head";
import { useState } from "react"
import Link from "next/link";
import { Icon } from 'semantic-ui-react';





export default function Recipe ({ recipe }) {
    const [selectedCategory, setSelectedCategory] = useState(null);

    const handleCategoryClick = (category) => {
        setSelectedCategory(category);
    };

    let filteredRecipe = recipe;
    if (selectedCategory) {
        filteredRecipe = recipe.filter((r) => r.Category === selectedCategory);
    }

    return (
        <>
        <Head>
        <title>The Recipe Room</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="assets/logo1.png" />
      </Head>

      <Link href="/"><Icon className="chevron left icon" id = "icon"/></Link>
      
            <section className="recipesection">
            {recipe.map((recipes) => {
                return (
                    <Link className="recipeboxes" 
                    href={`/view/${recipes.id}`}
                    key={recipes.id}>
                    <Image 
                        src = {`/recipics/${recipes.image1}`} 
                        alt=""
                        width='200'
                        height='100'
                    />
                    <h5 className="recipe-titles">{recipes.Recipe_Name}</h5>
                    </Link> 
                );
            })}
        </section>
        </>
        
    );
}

export async function getStaticProps() {
    const filePath = path.join(process.cwd(), "./pages/recipe.json");
    const fileContent = fs.readFileSync(filePath, 'utf8');
    const data = JSON.parse(fileContent);

    console.log(data);
    return {
        props: {
            recipe: data,
        },
    };
}

